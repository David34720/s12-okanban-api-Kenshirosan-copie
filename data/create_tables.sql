BEGIN;

DROP TABLE IF EXISTS "list",
"card",
"tag",
"card_has_tag";

CREATE TABLE "list" (
    "id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "title" TEXT NOT NULL,
    "position" INTEGER DEFAULT 1,
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ
);

CREATE TABLE "card" (
    "id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "content" TEXT,
    "position" INTEGER,
    "color" TEXT DEFAULT '#ffffff',
    "list_id" INTEGER NOT NULL,
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ
);

CREATE TABLE "tag" (
    "id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "name" TEXT NOT NULL UNIQUE,
    "color" TEXT DEFAULT '#ffffff',
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ
);

CREATE TABLE "card_has_tag" (
    "id" INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "card_id" INTEGER NOT NULL,
    "tag_id" INTEGER NOT NULL,
    "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMPTZ,
    -- UNIQUE dans ce cas veut dire que l'on enregistre qu'une seule association entre un tag et une card
    UNIQUE("card_id", "tag_id")
);

ALTER TABLE
    "card"
ADD
    FOREIGN KEY (list_id) REFERENCES "list"("id") ON DELETE CASCADE;

ALTER TABLE
    "card_has_tag"
ADD
    FOREIGN KEY (tag_id) REFERENCES "tag"("id") ON DELETE CASCADE;

ALTER TABLE
    "card_has_tag"
ADD
    FOREIGN KEY (card_id) REFERENCES "card"("id") ON DELETE CASCADE;

COMMIT;